% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cafta.R
\name{objective}
\alias{objective}
\title{Objective Function for CAFTA}
\usage{
objective(
  par,
  time,
  status,
  x,
  theta,
  hess,
  dist,
  robust = FALSE,
  eps = .Machine$double.eps
)
}
\arguments{
\item{par}{Numeric vector of parameters.}

\item{time}{Numeric vector of observed survival or censoring times.}

\item{status}{Numeric vector indicating event occurrence.}

\item{x}{Numeric matrix of covariates.}

\item{theta}{Numeric vector of prior means for parameters (for penalization).}

\item{hess}{Numeric matrix, prior Hessian matrix for penalization.}

\item{dist}{Character string specifying the distribution. One of
\code{"weibull"}, \code{"loglogistic"}, or \code{"lognormal"}.}

\item{robust}{Logical; if \code{TRUE}, computes robust covariance estimate
and attaches it as an attribute.}

\item{eps}{Numeric; small value to avoid division by zero or log of zero,
default is the machine's double precision epsilon.}
}
\value{
A numeric value representing the penalized negative log-likelihood.
The result has attributes:
\describe{
\item{gradient}{Gradient vector of the objective function.}
\item{hessian}{Hessian matrix of the objective function.}
\item{covariance}{(If \code{robust = TRUE}) Robust covariance estimate.}
}
}
\description{
Computes the penalized negative log-likelihood, gradient, and
Hessian for accelerated failure time models with parametric distributions
(Weibull, log-logistic, log-normal). The function also allows for robust
covariance estimation.
}
\details{
Computes the penalized negative log-likelihood for the specified
accelerated failure time model. The returned value includes attributes
\code{"gradient"} and \code{"hessian"} for use in optimization routines.
If \code{robust = TRUE}, a robust covariance estimate is attached as the
\code{"covariance"} attribute.
}
